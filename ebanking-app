from Tkinter import *
import tkMessageBox as mbx
from ttk import *

class Bank:
    def __init__(self, window):
        self.credits = 100000
        self.log = []
        
        #Column 1 - Setup
        self.Client = Label(window, text='Client Details', width='20').grid(row=1, column=1)
        self.Title = Label(window, text='eBanking App', width='20').grid(row=1,column=2)
        self.Stats = Label(window, text='eBanking Stats', width='20').grid(row=1,column=3)
        self.eNumber = Label(window, text='E-Bank ID: 000034\n948-342',width='20').grid(row=2, column=1)

        """Transfers"""
        self.transfer = IntVar()
        self.clientNum = IntVar()
        
        self.trLabel = Label(window, text='Amount').grid(row=4, column=1)
        self.trCredits = Entry(window, textvariable=self.transfer, width='18').grid(row=5, column=1)

        self.trLabel2 = Label(window, text='Destination ID').grid(row=6, column=1)
        self.DestNum = Entry(window, textvariable=self.clientNum, width='18').grid(row=7, column=1)
        self.trButton = Button(window, text='Transfer', command=self.trAmount, width='15').grid(row=8, column=1)
        
        #Column 2 - Operations
        """Deposits"""
        self.amountD = IntVar()
        self.DepLabel = Label(window, text='Deposit Amount').grid(row=2, column=2)
        self.addCredits = Entry(window, textvariable=self.amountD, width='18').grid(row=3, column=2)
        self.DepButton = Button(window, text='Deposit', command=self.depositAmount, width='15').grid(row=4, column=2)

        """Withdraws"""
        self.amountW = IntVar()
        self.withLabel = Label(window, text='Withdraw Amount').grid(row=5, column=2)
        self.withCredits = Entry(window, textvariable=self.amountW, width='18').grid(row=6, column=2)
        self.withButton = Button(window, text='Withdraw', command=self.withAmount, width='15').grid(row=7, column=2)

        """Balance"""
        self.info = Button(window, text='Balance', command=self.showBalance, width='15').grid(row=8, column=2)

        #Column 3 - Stats
        """Reset all"""
        self.resetAll = Button(window, text='Reset', command=self.clearAll, width='15').grid(row=2,column=3)

        """Log Stats"""
        self.tLabel = Label(window, text='Log Info').grid(row=3, column=3)
        self.text = Button(window, width='15', text='Show Log', command=self.showLog).grid(row=4, column=3)


    def showLog(self):
        ers, dep, wt, trs = 0, 0, 0, 0
        for element in self.log:
            if element == 'Error':
                ers += 1
            elif element == 'Deposit':
                dep += 1
            elif element == 'Withdraw':
                wt += 1
            elif element == 'Transfer':
                trs += 1
        msg = "Errors: "+str(ers)+"\nDeposits: "+str(dep)+"\nWithdraws: "+str(wt)+"\nTransfers: "+str(trs)+" "
        mbx.showinfo(title='eBanking Log', message=msg)
        


    def depositAmount(self):
        amount = self.amountD.get()
        if amount <= 0:
            mbx.showwarning(title='Error', message="The amount you entered is not valid")
            self.log.append("Error")
        else:
            self.credits += amount
            mbx.showinfo(title='Amount Deposit', message="The amount you entered was inserted.")
            self.log.append("Deposit")
            self.amountD.set(0)           


            
    def withAmount(self):
        amount = self.amountW.get()
        if amount <= 0:
            mbx.showwarning(title='Error', message="The amount you entered is not valid")
            self.log.append("Error")
        else:
            if amount < self.credits:
                self.credits -= amount
                mbx.showinfo(title='Amount Deposit', message="The amount you entered was removed.")
                self.log.append("Withdraw")
                self.amountW.set(0)
            else:
                mbx.showinfo(title='Amount Deposit', message="Wrong amount. Try again and check your balance.")
                self.log.append("Error")
                self.amountW.set(0)
                
                

    def showBalance(self):
         mbx.showinfo(title='Balance', message="Account Balance: "+str(self.credits)+" ")
         self.log.append("Preview")


    def clear(self):
        self.transfer.set(0)
        self.clientNum.set(0)

    def clearAll(self):
        if mbx.askyesno(title='Confirm', message='Are you sure that you\nwant to delete all entries?') == True:
            self.transfer.set(0)
            self.clientNum.set(0)
            self.amountW.set(0)
            self.amountD.set(0)
            mbx.showinfo(title='Reset', message="Entries cleared.")
            self.log.append("Reset")
        else:
            mbx.showinfo(title='Reset', message="Operation cancelled.")
            self.log.append("Cancel")


    def trAmount(self):
        amount = self.transfer.get()
        to = self.clientNum.get()
        if amount > 0 and to > 0:
            if mbx.askyesno(title='Confirm', message='Are you sure?') == True:
                if self.credits >= amount:
                    self.credits -= amount
                    mbx.showinfo(title='Transfer', message="The amount "+str(amount)+" was transfered.")
                    self.log.append("Transfer")
                    self.clear()
                else:
                    mbx.showinfo(title='Transfer', message="Not enough credits to complete the transfer.")
                    self.log.append("Error")
                    self.clear()
            else:
                mbx.showwarning(title='Transfer', message="Operation cancelled by the user")
                self.log.append("Cancel")
                self.clear()
                 
        else:
            mbx.showwarning(title='Transfer', message="The amount you entered is not valid")
            self.log.append("Error")
            self.clear()


root = Tk()
obj = Bank(root)
root.title("eBanking Application")
root.resizable(0,0)
root.mainloop()
