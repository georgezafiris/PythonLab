import time, os, random
import tkMessageBox as tk
from Tkinter import *


class App:
    def __init__(self, master):
        
        """
        Class variables
        """
        self.arr = []
        self.fileArr = []
        
        """
        File manipulation
        """
        if not os.path.exists('data.txt'):
            open('data.txt','a')
             
        def convertToInt(inp):
            numerals="0123456789abcdefghijklmnopqrstuvwxyz"
            return sum(numerals.index(x)*36**i for i,x in enumerate(inp[::-1]))

        """ Read and generate a list from file """
        with open('data.txt','r') as f:
            line = f.readline()
            line = line.split(',')
            for i in line:
                self.fileArr.append(convertToInt(i))
       
        """
        Main GUI
        environment
        """
        # Variables
        self.nElements = IntVar()
        self.mElements = StringVar()
        
        # Labels
        self.header = Label(master, text='Sorting Algorithms\nBubble Sort - Insertion Sort').grid(row=1,column=1, padx=5, pady=5)
        self.info = Label(master, text='George Zafiris - 2721').grid(row=11,column=2)
        self.autoFeedLabel = Label(master, text='Generate Random List').grid(row=3,column=1, padx=5, pady=5)
        self.numberOfItems = Label(master, text='Enter # for elements e.g: 4 ').grid(row=2,column=1, padx=5, pady=5)
        self.manualExp = Label(master, text='Enter your own list\ne.g: 2,4,5,6,7,5,3').grid(row=5, column=1, padx=5, pady=5)
        self.listLabelBubble = Label(master, text='BubbleSort').grid(row=9, column=1, padx=5, pady=5)
        self.listLabelInsertion = Label(master, text='Insertion Sort').grid(row=9, column=2, padx=5, pady=5)

        self.sortedElements = Label(master, text='Sorted').grid(row=12,column=2,padx=5,pady=5)
        self.unsortedElements = Label(master, text='Unsorted').grid(row=12,column=1,padx=5,pady=5)
        
        # Entries
        self.entryFeed = Entry(master, textvariable=self.nElements, width='20').grid(row=2,column=2, padx=5, pady=5)
        self.mEntryFeed = Entry(master, textvariable=self.mElements, width='20').grid(row=5, column=2, padx=5, pady=5)
        
        # Buttons
        self.buttonFeed = Button(master, text='CPU Feed', width='20', command=self.feeder).grid(row=3,column=2, padx=5, pady=5)
        self.loadManualy = Button(master, text='Load Feed', width='20', command=self.manualFeeder).grid(row=6,column=2, padx=5, pady=5)
        self.runBubble = Button(master, text='BubbleSort', width='20', command=self.bubbleSort).grid(row=7,column=1, padx=5, pady=5)
        self.runInsertion = Button(master, text='Insertion Sort', width='20', command=self.insertionSort).grid(row=7,column=2, padx=5, pady=5)

        self.fileBubble = Button(master, text='BubbleSort File', width='20', command=self.bubbleSortF).grid(row=8,column=1, padx=5, pady=5)
        self.fileInsertion = Button(master, text='InsertionSort File', width='20', command=self.insertionSortF).grid(row=8,column=2, padx=5, pady=5)

        # ListBox
        self.bListBox = Listbox(master, width='30',height='5')
        self.bListBox.grid(row=10,column=1, padx=5, pady=5)
        
        self.iListBox = Listbox(master, width='30',height='5')
        self.iListBox.grid(row=10,column=2, padx=5, pady=5)

        self.sortedBox = Listbox(master, width='30',height='5')
        self.sortedBox.grid(row=13,column=2, padx=5, pady=5)

        self.unsortedBox = Listbox(master, width='30',height='5')
        self.unsortedBox.grid(row=13,column=1, padx=5, pady=5)


    
    """
    Manual data generator
    """
    def manualFeeder(self):
        self.arr = []
        items = self.mElements.get()
        print(items)

        if isinstance(items, str) == True and items != '0' or items == 0:
            items = items.split(',')
            for obj in items:
                self.arr.append(int(obj))
                
            # Pop dialog - Notify user
            tk.showinfo('Report','Load Complete.')
            # Reset element entry
            self.mElements.set(0)
            # Add to listbox
            self.unsortedBox.insert(0,str(self.arr)) 
        else:
            tk.showinfo('Report','Try again')


    """
    Data generator
    """
    def feeder(self):
        elements = self.nElements.get()
        feeds = []
        if isinstance(elements, int) == True and elements != 0 and elements > 2:
            for i in range(1,elements+1):
                feeds.append(random.randint(1,1000))
            self.arr = feeds

            # Pop dialog - Notify user
            tk.showinfo('Report','Generation Complete.')
            # Reset element entry
            self.nElements.set(0)
            # Add to listbox
            self.unsortedBox.insert(0,str(self.arr)) 
        else:
            tk.showinfo('Report','Try again')
        
        

    """
    Sorting Algorithms
    (No File Reference)
    """
    def bubbleSort(self):
        arr = self.arr
        length = len(arr)
        # Get proc.clock time
        startTime = time.clock()
        for i in range(length):
            for j in range(length-1):
                if (arr[i] < arr[j]):
                    # Swap - pythonian way
                    arr[i], arr[j] = arr[j], arr[i]

        # Calculate time      
        runTime = time.clock() - startTime
        # Add to time listbox
        self.bListBox.insert(0, str(runTime) + ' seconds')
        # Add to sorted listbox
        self.sortedBox.insert(0,str(self.arr)+' BubbleSort')
        print arr
        
        
        
    def insertionSort(self):
        arr = self.arr
        startTime = time.clock()
        for i in range(1, len(arr)):    
            j = i                    
            while j > 0 and arr[j] < arr[j-1]:
                # Swap 
                arr[j], arr[j-1] = arr[j-1], arr[j] 
                j-=1

        # Get time
        runTime = time.clock() - startTime
        # Add to time listbox
        self.iListBox.insert(0, str(runTime) + ' seconds')
        # Add to sorted listbox
        self.sortedBox.insert(0,str(self.arr)+' InsSort') 
        print arr


    """
    Reading data
    from file
    """
    def bubbleSortF(self):
        arr = self.fileArr
        length = len(arr)
        startTime = time.clock()
        for i in range(length):
            for j in range(length-1):
                if (arr[i] < arr[j]):
                    arr[i], arr[j] = arr[j], arr[i]
        runTime = time.clock() - startTime
        self.bListBox.insert(0, 'File: ' + str(runTime) + ' seconds')
        self.sortedBox.insert(0, str(arr) + ' BubbleSortF')


        
    def insertionSortF(self):
        arr = self.fileArr
        startTime = time.clock()
        for i in range(1, len(arr)):    
            j = i                    
            while j > 0 and arr[j] < arr[j-1]: 
                arr[j], arr[j-1] = arr[j-1], arr[j] 
                j-=1
        runTime = time.clock() - startTime
        self.iListBox.insert(0, 'File: ' + str(runTime) + ' seconds')
        self.sortedBox.insert(0, str(arr) + ' InsSorF')
    


# Initialize gui envi
app = Tk() # Main root
obj = App(app)
app.resizable(0,0)
app.title('AlgoAnalysis - G.Z - TEIWEST - 2721')
app.mainloop()

